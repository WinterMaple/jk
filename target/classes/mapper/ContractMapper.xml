<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hfl.jk.mapper.ContractMapper">
	<!-- result映射 -->
	<resultMap type="cn.hfl.jk.domain.Contract" id="ContractRM">
		<!-- 主键 -->
		<id property="id" column="CONTRACT_ID"/>
		<!-- 一般属性 -->
		<result property="offeror" column="OFFEROR"/>
		<result property="contractNo" column="CONTRACT_NO"/>
		
		<!-- 虚拟字段 -->
		<result property="cpnum" column="CPNUM"/>
		<result property="extnum" column="EXTNUM"/>
		
		<result property="signingDate" column="SIGNING_DATE"/>
		<result property="inputBy" column="INPUT_BY"/>
		<result property="checkBy" column="CHECK_BY"/>
		<result property="inspector" column="INSPECTOR"/>
		<result property="totalAmount" column="TOTAL_AMOUNT"/>
		<result property="importNum" column="IMPORT_NUM"/>
		<result property="crequest" column="CREQUEST"/>
		<result property="customName" column="CUSTOM_NAME"/>
		<result property="deliveryPeriod" column="DELIVERY_PERIOD"/>
		<result property="shipTime" column="SHIP_TIME"/>
		<result property="tradeTerms" column="TRADE_TERMS"/>
		<result property="remark" column="REMARK"/>
		<result property="printStyle" column="PRINT_STYLE"/>
		<result property="oldState" column="OLD_STATE"/>
		<result property="state" column="STATE"/>
		<result property="outState" column="OUT_STATE"/>
		
		<result property="createBy" column="CREATE_BY"/>
		<result property="createDept" column="CREATE_DEPT"/>
		<result property="createTime" column="CREATE_TIME"/>
		
	</resultMap>
	
	<resultMap type="cn.hfl.jk.vo.ContractVO" id="contractVORM" extends="ContractRM">
		<!-- 合同和货物（一对多） -->
		<collection property="contractProducts" ofType="cn.hfl.jk.vo.ContractProductVO">
			<!-- 主键 -->
			<id property="id" column="CONTRACT_PRODUCT_ID"/>
			<!-- 一般属性 -->
			<result property="productNo" column="PRODUCT_NO"/>
			<result property="productImage" column="PRODUCT_IMAGE"/>
			<result property="productDesc" column="PRODUCT_DESC"/>
			<result property="cnumber" column="CNUMBER"/>
			<result property="outCnumber" column="OUT_NUMBER"/>
			<result property="loadingRate" column="LOADING_RATE"/>
			<result property="boxNum" column="BOX_NUM"/>
			<result property="packingUnit" column="PACKING_UNIT"/>
			<result property="price" column="PRICE"/>
			<result property="amount" column="AMOUNT"/>
			<result property="finished" column="FINISHED"/>
			<result property="exts" column="EXTS"/>
			<result property="orderNo" column="ORDER_NO"/>
			
			<!-- 货物和生产厂家（多对一） -->
			<association property="factory" javaType="cn.hfl.jk.domain.Factory">
				<id property="id" column="FACTORY_ID"/>
				<result property="fullName" column="FULL_NAME"/>
				<result property="factoryName" column="FACTORY_NAME"/>
				<result property="contacts" column="CONTACTS"/>
			</association>
			
			<!-- 合同和货物（一对多） -->
			<collection property="extCproducts" ofType="cn.hfl.jk.vo.ExtCproductVO">
				<!-- 主键 -->
				<id property="id" column="EXT_CPRODUCT_ID"/>
				<!-- 一般属性 -->
				<result property="ctype" column="CTYPE"/>
				<result property="productNo" column="EXT_PRODUCT_NO"/>
				<result property="productImage" column="EXT_PRODUCT_IMAGE"/>
				<result property="productDesc" column="EXT_PRODUCT_DESC"/>
				<result property="cnumber" column="EXT_CNUMBER"/>
				<result property="packingUnit" column="EXT_PACKING_UNIT"/>
				<result property="price" column="EXT_PRICE"/>
				<result property="amount" column="EXT_AMOUNT"/>
				<result property="productRequest" column="PRODUCT_REQUEST"/>
				<result property="orderNo" column="EXT_ORDER_NO"/>
				
				<!-- 货物和生产厂家（多对一） -->
				<association property="factory" javaType="cn.hfl.jk.domain.Factory">
					<id property="id" column="EXT_FACTORY_ID"/>
					<result property="fullName" column="EXT_FULL_NAME"/>
					<result property="factoryName" column="EXT_FACTORY_NAME"/>
					<result property="contacts" column="EXT_CONTACTS"/>
				</association>
			</collection>
		</collection>
	</resultMap>
	
	<!-- 查询,如果支持异构数据库，必须针对每个数据库写一个SQL语句，因为使用了底层函数val -->
	<select id="find" parameterType="map" resultMap="ContractRM">
		SELECT c.CONTRACT_ID,c.OFFEROR,c.CONTRACT_NO,c.SIGNING_DATE,c.INPUT_BY,c.CHECK_BY,
			c.INSPECTOR,c.IMPORT_NUM,c.CREQUEST,c.CUSTOM_NAME,c.DELIVERY_PERIOD,c.SHIP_TIME,
			c.TRADE_TERMS,c.REMARK,c.PRINT_STYLE,c.OLD_STATE,c.STATE,c.OUT_STATE,c.CREATE_BY,
			c.CREATE_DEPT,c.CREATE_TIME,
			(SELECT count(*) from CONTRACT_PRODUCT_C where contract_id=c.contract_id) as cpnum,
			(select count(*) from EXT_CPRODUCT_C where CONTRACT_PRODUCT_ID in
			  (select CONTRACT_PRODUCT_ID from CONTRACT_PRODUCT_C where CONTRACT_ID=c.contract_id)) as extnum,
			(
			  nvl((select sum(cnumber*price) from CONTRACT_PRODUCT_C where contract_id=c.contract_id),0)
			  +
			  nvl((select sum(cnumber*price) from EXT_CPRODUCT_C where CONTRACT_PRODUCT_ID in
			    (select contract_product_id from CONTRACT_PRODUCT_C where contract_id=c.contract_id)),0)
			) as TOTAL_AMOUNT
		from CONTRACT_C c
	</select>
	
	<!-- 查询一个 -->
	<select id="get" parameterType="String" resultMap="ContractRM">
		select * from contract_c
		where contract_id=#{pid}
	</select>
	
	<!-- 查询 -->
	<select id="view" parameterType="String" resultMap="contractVORM">
		SELECT
			c.*,
			t.contract_product_id,t.factory_name,t.product_no,t.product_desc,t.cnumber,t.packing_unit,t.price,t.amount,
			t.ext_cproduct_id,t.ext_factory_name,t.ext_product_no,t.ext_product_desc,t.ext_cnumber,t.ext_packing_unit,t.ext_price,t.ext_amount
		FROM
		(SELECT * FROM contract_c) c
		LEFT JOIN
		(
			SELECT
				cp.contract_id,
				cp.contract_product_id,cp.factory_name,cp.product_no,cp.product_desc,cp.cnumber,cp.packing_unit,cp.price,cp.amount,
				ep.ext_cproduct_id,ep.factory_name AS ext_factory_name,ep.product_no AS ext_product_no,ep.product_desc as ext_product_desc,ep.cnumber as ext_cnumber,ep.packing_unit as ext_packing_unit,ep.price as ext_price,ep.amount as ext_amount
			FROM
			(
				SELECT 
					cp.contract_product_id,cp.contract_id,f.factory_name,cp.product_no,
					cp.product_desc,cp.cnumber,cp.packing_unit,cp.price,cp.amount
				FROM
				(SELECT contract_product_id,contract_id,factory_id,product_no, product_desc,cnumber,packing_unit, price,amount FROM contract_product_c) cp
				LEFT JOIN 
				(SELECT factory_id,factory_name FROM factory_c) f
				ON cp.factory_id = f.factory_id
			) cp
			LEFT JOIN
			(
				SELECT 
					ep.ext_cproduct_id,ep.contract_product_id,f.factory_name,ep.product_no,
					ep.product_desc,ep.cnumber,ep.packing_unit,ep.price,ep.amount
				FROM
				(SELECT ext_cproduct_id,contract_product_id,factory_id,product_no, product_desc,cnumber,packing_unit, price,amount FROM ext_cproduct_c) ep
				LEFT JOIN
				(SELECT factory_id,factory_name FROM factory_c) f
				ON ep.factory_id=f.factory_id
			) ep
			ON cp.contract_product_id=ep.contract_product_id
		) t	
		ON c.contract_id=t.contract_id	
		WHERE c.contract_id=#{id}
	</select>
	
	<!-- 新增
		oracle jdbc驱动：当某个值为null时，必须告诉它当前字段默认值的类型jdbcType=VARCHAR（mybatis定义）
		mysql不用写。
	-->
	<insert id="insert" parameterType="cn.hfl.jk.domain.Contract">
		insert into contract_c
		(CONTRACT_ID,OFFEROR,CONTRACT_NO,SIGNING_DATE,INPUT_BY,CHECK_BY,INSPECTOR,TOTAL_AMOUNT,IMPORT_NUM,CREQUEST,CUSTOM_NAME,DELIVERY_PERIOD,SHIP_TIME,TRADE_TERMS,REMARK,PRINT_STYLE,OLD_STATE,STATE,OUT_STATE,CREATE_BY,CREATE_DEPT,CREATE_TIME)
		values(
			#{id},
			#{offeror,jdbcType=VARCHAR},
			#{contractNo,jdbcType=VARCHAR},
			#{signingDate,jdbcType=VARCHAR},
			#{inputBy,jdbcType=VARCHAR},
			#{checkBy,jdbcType=VARCHAR},
			#{inspector,jdbcType=VARCHAR},
			#{totalAmount,jdbcType=DOUBLE},
			#{importNum,jdbcType=INTEGER},
			#{crequest,jdbcType=VARCHAR},
			#{customName,jdbcType=VARCHAR},
			#{deliveryPeriod,jdbcType=TIMESTAMP},
			#{shipTime,jdbcType=TIMESTAMP},
			#{tradeTerms,jdbcType=VARCHAR}
			#{remark,jdbcType=VARCHAR},
			#{printStyle,jdbcType=VARCHAR},
			#{oldState,jdbcType=INTEGER}
			#{state,jdbcType=INTEGER},
			#{outState,jdbcType=INTEGER},
			#{createBy,jdbcType=VARCHAR},
			#{createDept,jdbcType=VARCHAR},
			#{createTime,jdbcType=TIMESTAMP}
		)
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="cn.hfl.jk.domain.Contract">
		update contract_c
		<set>
			<if test="offeror != null">OFFEROR=#{offeror},</if>
			<if test="contractNo != null">CONTRACT_NO=#{contractNo},</if>
			<if test="signingDate != null">SIGNING_DATE=#{signingDate},</if>
			<if test="inputBy != null">INPUT_BY=#{inputBy},</if>
			<if test="checkBy != null">CHECK_BY=#{checkBy},</if>
			<if test="inspector != null">INSPECTOR=#{inspector},</if>
			<if test="totalAmount != null">TOTAL_AMOUNT=#{totalAmount},</if>
			<if test="importNum != null">IMPORT_NUM=#{importNum},</if>
			<if test="crequest != null">CREQUEST=#{crequest},</if>
			<if test="customName != null">CUSTOM_NAME=#{customName},</if>
			<if test="deliveryPeriod != null">DELIVERY_PERIOD=#{deliveryPeriod},</if>
			<if test="shipTime != null">SHIP_TIME=#{shipTime},</if>
			<if test="tradeTerms != null">TRADE_TERMS=#{tradeTerms},</if>
			<if test="remark != null">REMARK=#{remark},</if>
			<if test="printStyle != null">PRINT_STYLE=#{printStyle},</if>
			<if test="oldState != null">OLD_STATE=#{oldState},</if>
			<if test="state != null">STATE=#{state},</if>
			<if test="outState != null">OUT_STATE=#{outState},</if>
		</set>
		where CONTRACT_ID=#{id}
	</update>
	
	<!-- 修改状态 -->
	<update id="updateState" parameterType="map">
		update contract_c set state=#{state}
		where CONTRACT_ID in
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</update>
	
	<!-- 删除一条 -->
	<delete id="deleteById" parameterType="String">
		delete from contract_c
		where CONTRACT_ID=#{pid}
	</delete>
	
	<!-- 删除多条 -->
	<delete id="delete" parameterType="String">
		delete from contract_c
		where CONTRACT_ID in
		<foreach collection="array" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
</mapper>